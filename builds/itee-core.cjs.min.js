"use strict";Object.defineProperty(exports,"__esModule",{value:!0});var t=require("itee-validators"),e=require("crypto"),s=require("itee-utils");function o(t){return t&&"object"==typeof t&&"default"in t?t:{default:t}}var r=o(e);const i=new Uint8Array(256);let n=i.length;function a(){return n>i.length-16&&(r.default.randomFillSync(i),n=0),i.slice(n,n+=16)}var u=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function l(t){return"string"==typeof t&&u.test(t)}const h=[];for(let t=0;t<256;++t)h.push((t+256).toString(16).substr(1));function c(t,e,s){const o=(t=t||{}).random||(t.rng||a)();if(o[6]=15&o[6]|64,o[8]=63&o[8]|128,e){s=s||0;for(let t=0;t<16;++t)e[s+t]=o[t];return e}return function(t,e=0){const s=(h[t[e+0]]+h[t[e+1]]+h[t[e+2]]+h[t[e+3]]+"-"+h[t[e+4]]+h[t[e+5]]+"-"+h[t[e+6]]+h[t[e+7]]+"-"+h[t[e+8]]+h[t[e+9]]+"-"+h[t[e+10]]+h[t[e+11]]+h[t[e+12]]+h[t[e+13]]+h[t[e+14]]+h[t[e+15]]).toLowerCase();if(!l(s))throw TypeError("Stringified UUID is invalid");return s}(o)}const p=s.toEnum({Console:1,Html:2,Toast:4,File:8,Database:16,All:255}),d=s.toEnum({Message:0,Progress:1,Time:2}),g=s.toEnum({None:0,Debug:1,Info:2,Warning:4,Error:8,All:255});class f{static _levelToString(t){let e="";switch(t){case g.Info:e="info";break;case g.Warning:e="warning";break;case g.Error:e="error";break;default:e="unknownLogLevel"}return e}constructor(t={}){const e={outputLevel:g.Error,outputs:p.Console,...t};this.isLogger=!0,this.outputLevel=e.outputLevel,this.outputs=e.outputs,this._logsArray=[],this._timers={},this._counterTrace=0}get outputLevel(){return this._outputLevel}set outputLevel(e){const s="Expect a value from LogLevel enum.";if(t.isNull(e))throw new Error(`OutputLevel cannot be null ! ${s}`);if(t.isUndefined(e))throw new Error(`OutputLevel cannot be undefined ! ${s}`);this._outputLevel=e}get outputs(){return this._outputs}set outputs(e){const s="Expect a value from LogOutput enum.";if(t.isNull(e))throw new Error(`Output cannot be null ! ${s}`);if(t.isUndefined(e))throw new Error(`Output cannot be undefined ! ${s}`);this._outputs=e}_formatTrace(e,s){const o=`${f._levelToString(e)}_${this._counterTrace}`;if(t.isString(s))this._logsArray[o]=s;else if(t.isObject(s))this._logsArray[o]=f._formatObjectError(s);else if(t.isArrayOfString(s))this._logsArray[o]=s.toString();else if(t.isArrayOfObject(s)){this._logsArray[o]="";for(let t=0,o=s.length;t<o;t++)this._formatTrace(e,s[t])}else this._logsArray[o]=s?s.toString():"Empty log data !";return this._counterTrace++,this._logsArray[o]}dispatch(t){const e=t.type;switch(e){case d.Message:this._dispatchMessage(t);break;case d.Progress:this._dispatchProgress(t);break;case d.Time:this._dispatchTime(t);break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}}_dispatchMessage(t){const e=t.level,s=t.message;switch(e){case g.Error:this.outputLevel&g.Error&&this._dispatchErrorMessage(s);break;case g.Warning:this.outputLevel&g.Warning&&this._dispatchWarningMessage(s);break;case g.Info:this.outputLevel&g.Info&&this._dispatchInfoMessage(s);break;case g.Debug:this.outputLevel&g.Debug&&this._dispatchDebugMessage(s);break;default:throw new RangeError(`Invalid switch parameter: ${e}`)}}_dispatchErrorMessage(t){if(this.outputs&p.Console&&console.error(t),this.outputs&p.Html){const e=document.createElement("span");e.classList.add("log-error"),e.innerText=t,document.body.appendChild(e)}this.outputs,p.Toast,this.outputs,p.File,this.outputs,p.Database}_dispatchWarningMessage(t){if(this.outputs&p.Console&&console.warn(t),this.outputs&p.Html){const e=document.createElement("span");e.classList.add("log-warning"),e.innerText=t,document.body.appendChild(e)}this.outputs,p.Toast,this.outputs,p.File,this.outputs,p.Database}_dispatchInfoMessage(t){if(this.outputs&p.Console&&console.log(t),this.outputs&p.Html){const e=document.createElement("span");e.classList.add("log-info"),e.innerText=t,document.body.appendChild(e)}this.outputs,p.Toast,this.outputs,p.File,this.outputs,p.Database}_dispatchDebugMessage(t){if(this.outputs&p.Console&&console.log(t),this.outputs&p.Html){const e=document.createElement("span");e.classList.add("log-info"),e.innerText=t,document.body.appendChild(e)}this.outputs,p.Toast,this.outputs,p.File,this.outputs,p.Database}_dispatchProgress(t){const e=t.level;let s=t.message;switch(e){case g.Info:this.outputLevel&g.Info&&this._dispatchInfoProgress(s);break;case g.Debug:this.outputLevel&g.Debug&&this._dispatchDebugProgress(s);break;default:throw new RangeError(`Invalid progress level parameter: ${e}`)}}_dispatchInfoProgress(t){if(this.outputs&p.Console&&console.log(t),this.outputs&p.Html){const e=document.createElement("span");e.classList.add("log-info"),e.innerText=t,document.body.appendChild(e)}this.outputs,p.Toast,this.outputs,p.File,this.outputs,p.Database}_dispatchDebugProgress(t){if(this.outputs&p.Console&&console.log(t),this.outputs&p.Html){const e=document.createElement("span");e.classList.add("log-info"),e.innerText=t,document.body.appendChild(e)}this.outputs,p.Toast,this.outputs,p.File,this.outputs,p.Database}_dispatchTime(t){console.log(t.message)}debug(t){this.dispatch({type:d.Message,level:g.Debug,message:t})}log(t){this.dispatch({type:d.Message,level:g.Info,message:t})}warn(t){this.dispatch({type:d.Message,level:g.Warning,message:t})}error(t){this.dispatch({type:d.Message,level:g.Error,message:t})}progress(t){if(t.preventDefault(),t.cancelable&&t.stopImmediatePropagation(),t.lengthComputable){const e=t.type,s=t.loaded,o=t.total,r=`${e}: ${Math.round(s/o*1e4)/100}% [${s}/${o}]`;this.dispatch({type:d.Progress,level:g.Info,message:r})}}startChronoFor(t){this._timers[t]=(new Date).getTime()}stopChronoFor(t){const e=`${t} take ${(new Date).getTime()-this._timers[t]}ms.`;this.dispatch({type:d.Time,level:g.Debug,message:e})}setOutputLevel(t){return this.outputLevel=t,this}setOutput(t){return this.outputs=t,this}}const m=new f;exports.DefaultLogger=m,exports.TAbstractObject=
/**
 * @author [Tristan Valcke]{@link https://github.com/Itee}
 * @license [BSD-3-Clause]{@link https://opensource.org/licenses/BSD-3-Clause}
 */
class{get name(){return this._name}set name(e){const s="Expect a String";if(t.isNull(e))throw new Error(`name cannot be null ! ${s}`);if(t.isUndefined(e))throw new Error(`name cannot be undefined ! ${s}`);if(t.isNotString(e))throw new ReferenceError("TAbstractObject.name: Value cannot be null or undefined. Expect an  !");this._name=e}getName(t){return t.name=this.name,this}setName(t){return this.name=t,this}get uuid(){return this._uuid}set uuid(e){const s="Expect an uuid v4.";if(t.isNull(e))throw new Error(`uuid cannot be null ! ${s}`);if(t.isUndefined(e))throw new Error(`uuid cannot be undefined ! ${s}`);if(!l(e)||4!==function(t){if(!l(t))throw TypeError("Invalid UUID");return parseInt(t.substr(14,1),16)}(e))throw new Error(`Unable to set invalid uuid [${e}] ! ${s}`);this._uuid=e}getUuid(t){return t.uuid=this.uuid,this}setUuid(t){return this.uuid=t,this}constructor(t={}){const e=c(),s={uuid:e,name:`${this.constructor.name}_${e}`,logger:null,...t};this.uuid=s.uuid,this.name=s.name,this.logger=s.logger}},exports.TLogger=f;
